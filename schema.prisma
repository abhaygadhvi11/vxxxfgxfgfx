
////////////////////////////////////////////////////////////////

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // 
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  users     User[]
  tasks     Task[]
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  name           String
  passwordHash   String
  organizationId String?
  role           UserRole @default(USER)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  assignedTasks  Task[]   @relation("AssignedUser")
  createdTasks   Task[]   @relation("CreatedBy")
  organization   Organization? @relation(fields: [organizationId], references: [id])
  comments       TaskComment[]
}

model Task {
  id             String     @id @default(cuid())
  title          String
  description    String?
  status         TaskStatus @default(PENDING)
  priority       Priority   @default(MEDIUM)
  dueDate        DateTime?
  assignedToId   String?
  createdById    String
  organizationId String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  assignedTo     User?         @relation("AssignedUser", fields: [assignedToId], references: [id])
  createdBy      User          @relation("CreatedBy", fields: [createdById], references: [id])
  organization   Organization  @relation(fields: [organizationId], references: [id])
  comments       TaskComment[]
  attachments    TaskAttachment[]
}

model TaskComment {
  id        String   @id @default(cuid())
  content   String
  taskId    String
  userId    String
  createdAt DateTime @default(now())

  task      Task     @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model TaskAttachment {
  id         String   @id @default(cuid())
  fileName   String
  fileUrl    String
  taskId     String
  uploadedAt DateTime @default(now())

  task       Task     @relation(fields: [taskId], references: [id])
}
